//
//  main.cpp
//  matrix_maxsubmatrixsum_sorted
//
//  Created by CodeBreaker on 27/12/24.
//

/*
 Q4. Maximum Submatrix Sum
 Unsolved
 feature icon
 Using hints except Complete Solution is Penalty free now
 Use Hint
 Problem Description
 Given a row-wise and column-wise sorted matrix A of size N * M.
 Return the maximum non-empty submatrix sum of this matrix.


 Problem Constraints
 1 <= N, M <= 1000
 -109 <= A[i][j] <= 109


 Input Format
 The first argument is a 2D integer array A.


 Output Format
 Return a single integer that is the maximum non-empty submatrix sum of this matrix.


 Example Input
 Input 1:-
     -5 -4 -3
 A = -1  2  3
      2  2  4
 Input 2:-
     1 2 3
 A = 4 5 6
     7 8 9


 Example Output
 Output 1:-
 12
 Output 2:-
 45


 Example Explanation
 Expanation 1:-
 The submatrix with max sum is
 -1 2 3
  2 2 4
  Sum is 12.
 Explanation 2:-
 The largest submatrix with max sum is
 1 2 3
 4 5 6
 7 8 9
 The sum is 45.
 */

#include <iostream>
#include<vector>
using namespace std;

long solve(vector<vector<int> > &A) {
    long ans = A[0][0];
    size_t row = A.size(), col=A[0].size();
    vector<vector<long>> PFSM(row,vector<long>(col));
    int r=0;
    while(r<row)
    {
        PFSM[r][0]=A[r][0];
        for(int i=1;i<col;i++)
        {
            PFSM[r][i]=PFSM[r][i-1]+A[r][i];
        }
        r++;
    }
    int c=0;
    while(c<col)
    {
        for(int i=1;i<row;i++)
        {
            PFSM[i][c]=PFSM[i-1][c]+PFSM[i][c];
        }
        c++;
    }
    int TLx=0,TLy=0,BRx=(int)row-1,BRy=(int)col-1;
    for(r=0;r<row;r++)
    {
        for(c=0;c<col;c++)
        {
            TLx=r;TLy=c;
            long sum=PFSM[BRx][BRy];
            if(TLx!=0 && TLy!=0)
            {
                sum+=PFSM[TLx-1][TLy-1];
            }
            if(TLy!=0)
            {
                sum-=PFSM[BRx][TLy-1];
            }
            if(TLx!=0)
            {
                sum-=PFSM[TLx-1][BRy];
            }
            ans=max(ans,sum);
        }
    }
        
    return ans;
}


int main(int argc, const char * argv[]) {
    // insert code here...
    std::cout << "Hello, max sum sub arry's !\n";
    vector<vector<int>> A{{534,-346,557,-256},{-173,-193,-865,-285},{575,288,-947,881},{430,142,-766,285},{-873,169,-687,-854},{727,890,137,-744},{599,-200,479,-672}};
    //{{-6, -6},
//        {
//            -29, -8
//        },
//        {
//            3, -8
//        },
//        {
//            -15,  2
//        },
//        {
//            25, 25
//        },
//        {
//            20, -5
//        }};
    /* {{-99346,-98955,-98586,-98240,-97347,-97161,-97115,-94272,-93736,-91279,-91224,-91208,-90614,-88765,-88725,-88717,-88542,-88263,-88143,-87523,-87102,-86868,-86804,-86199,-86081,-85596,-84943,-84642,-83513},{-83249,-82975,-82877,-82813,-82553,-82004,-81876,-81247,-80883,-80154,-80008,-79530,-79309,-78784,-78071,-77537,-77404,-76942,-76406,-75655,-75075,-74431,-73255,-72898,-72842,-71466,-70543,-70376,-69526},{-68911,-68740,-68313,-67318,-66801,-65896,-65760,-65511,-64761,-64259,-64161,-63959,-63654,-63481,-63400,-63191,-62210,-61854,-61151,-60536,-60216,-59059,-58863,-58791,-57545,-57392,-56610,-56542,-55945},{-55610,-54956,-54883,-52863,-52571,-52217,-48935,-48344,-47847,-47759,-46872,-46565,-46257,-45861,-45590,-44603,-42450,-42090,-41894,-40099,-39859,-38664,-38185,-36387,-35408,-34485,-34400,-34032,-33387},{-32639,-32012,-31878,-31613,-31253,-31228,-30526,-30024,-29866,-29105,-26729,-25278,-25035,-23943,-22881,-22853,-22604,-22159,-21615,-21602,-20871,-20053,-19495,-19220,-18821,-17312,-17130,-17049,-15741},{-15634,-13861,-13783,-13525,-11335,-10689,-10441,-9543,-9279,-9221,-7663,-7166,-7142,-6939,-6101,-5886,-5775,-5107,-3192,-2990,-2219,-1741,-1643,-1543,-301,269,461,607,1712},{1765,2203,2366,3260,3812,3948,4494,4896,5372,6679,7663,7674,9133,10716,10985,11784,13232,13617,14093,15706,15770,15952,17137,17454,17561,17960,17994,18263,18282},{18424,18594,18722,20054,20067,20371,21524,21781,22720,23467,23947,24655,25073,25372,25421,26693,28061,28319,28505,28864,29238,32090,32233,32895,34406,34705,37448,37819,38172},{38247,38847,39227,39408,39593,39685,39702,40108,40343,40950,41145,41334,41850,42583,44369,44945,45243,46236,47178,47438,48106,49064,49502,50230,50573,54548,54804,54961,56098},{56442,57502,57657,58165,59937,62428,62547,62588,62930,63090,63307,63674,64320,64592,64983,65052,66734,66735,67791,68028,68660,69037,69152,69970,70030,70189,70561,71406,71689},{71933,73025,73513,73683,73754,73775,73897,74531,74564,75218,75383,75664,75884,76758,77951,78008,78502,78884,79213,79417,79947,80800,81160,81631,81854,82087,82572,82585,82919},{83718,84124,84286,85170,86045,86059,86071,86482,86531,89782,89836,90138,90246,90423,90446,90576,91461,91787,91948,92213,92486,92619,92884,92992,93923,93958,94661,96233,99610}};*/
    cout<<"max sum subaarya : "<<solve(A)<<endl;
    return 0;
}
